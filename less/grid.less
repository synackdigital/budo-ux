//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  .container-fixed();

  @media (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
  @media (min-width: @screen-xl-min) {
    width: @container-xl;
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  .container-fixed();
}

// Optional max-width for fluid containers (pick one)
.container-fluid-md {
  max-width: @screen-md;
}
.container-fluid-lg {
  max-width: @screen-lg;
}
.container-fluid-xl {
  max-width: @screen-xl;
}


// Hidari/migi containers
// -------------------------

// Mobile-first layout
.hidari,
.migi {
  .make-xs-column(@grid-columns);
  padding-top: @line-height-computed;
  padding-bottom: @line-height-computed;
}
.hidari { background-color: @layout-hidari-bg; color: @layout-hidari-color; }
.migi { background-color: @layout-migi-bg; color: @layout-migi-color; }

// Responsive layout
@media (min-width: @grid-float-breakpoint) {

  // Borders and padding between containers
  .hidari { border-right: @padding-small-horizontal solid @layout-hidari-border; }
  .migi { border-left: @padding-small-horizontal solid @layout-migi-border; }

  // Force double gutters around center line
  .hidari { padding-right: @grid-gutter-width !important; }
  .migi { padding-left: @grid-gutter-width !important; }

  // Extend hidari/migi bg colors to fill viewport
  body {
    background-image: linear-gradient(
      to right,
      @layout-hidari-bg 0%,
      @layout-hidari-bg 50%,
      @layout-migi-bg 50%,
      @layout-migi-bg 100%
    );
  }
}


// Grid base
// -------------------------

.grid {
  .make-row();
}


// Grid variations
// -------------------------

// Centered grid
.grid-chuushin {
  .hidari, .migi {
    .make-sm-column( 9 );
    .make-md-column( 9 );
    .make-lg-column( 9 );
    .make-xl-column( 9 );
  }
}
// Left-aligned grids
.grid-hidari {
  .hidari {
    .make-sm-column( 6 );
    .make-md-column( 5 );
    .make-lg-column( 4 );
    .make-xl-column( 3 );
  }
  .migi {
    .make-sm-column( 12 );
    .make-md-column( 13 );
    .make-lg-column( 14 );
    .make-xl-column( 15 );
  }
}
.grid-yayahidari {
  .hidari {
    .make-sm-column( 8 );
    .make-md-column( 7 );
    .make-lg-column( 6 );
    .make-xl-column( 5 );
  }
  .migi {
    .make-sm-column( 10 );
    .make-md-column( 11 );
    .make-lg-column( 12 );
    .make-xl-column( 13 );
  }
}
// Right-aligned grids
.grid-migi {
  .hidari {
    .make-sm-column( 13 );
    .make-md-column( 14 );
    .make-lg-column( 15 );
    .make-xl-column( 16 );
  }
  .migi {
    .make-sm-column( 5 );
    .make-md-column( 4 );
    .make-lg-column( 3 );
    .make-xl-column( 2 );
  }
}
.grid-yayamigi {
  .hidari {
    .make-sm-column( 10 );
    .make-md-column( 11 );
    .make-lg-column( 12 );
    .make-xl-column( 13 );
  }
  .migi {
    .make-sm-column( 8 );
    .make-md-column( 7 );
    .make-lg-column( 6 );
    .make-xl-column( 5 );
  }
}


// Stretching components
// -------------------------

.stretch-left {
  position: relative;
}
.stretch-left:before {
  content: '';
  background-color: inherit;
  position: absolute;
  height: 100%;
  width: 999px;
  left: -999px;
}

.stretch-right {
  position: relative;
}
.stretch-right:before {
  content: '';
  background-color: inherit;
  position: absolute;
  height: 100%;
  width: 999px;
  right: -999px;
}


// Brand container
// -------------------------

.brand-container {
  background-color: @brand-bg;
  max-width: 288px; // half actual graphic width
  // margin-left: (@grid-gutter-width / -2);
  margin-right: (@grid-gutter-width / -2);
}
